# -*- coding: utf-8 -*-
"""Gráficos.ipynb

Automatically generated by Colaboratory.

Original file is located at
    https://colab.research.google.com/drive/10Kjh8x-u3ocCZTDj_k5qLy5VyV4RCFEx
"""

import pandas as pd

"""# De/Para UFs - Regiões"""

# De_para UF/Regiao
uf_regiao = {
    'Acre': 'Norte',
    'Alagoas': 'Nordeste',
    'Amapá': 'Norte',
    'Amazonas': 'Norte',
    'Bahia': 'Nordeste',
    'Ceará': 'Nordeste',
    'Distrito Federal': 'Centro-Oeste',
    'Espírito Santo': 'Sudeste',
    'Goiás': 'Centro-Oeste',
    'Maranhão': 'Nordeste',
    'Mato Grosso': 'Centro-Oeste',
    'Mato Grosso do Sul': 'Centro-Oeste',
    'Minas Gerais': 'Sudeste',
    'Pará': 'Norte',
    'Paraíba': 'Nordeste',
    'Paraná': 'Sul',
    'Pernambuco': 'Nordeste',
    'Piauí': 'Nordeste',
    'Rio de Janeiro': 'Sudeste',
    'Rio Grande do Norte': 'Nordeste',
    'Rio Grande do Sul': 'Sul',
    'Rondônia': 'Norte',
    'Roraima': 'Norte',
    'Santa Catarina': 'Sul',
    'São Paulo': 'Sudeste',
    'Sergipe': 'Nordeste',
    'Tocantins': 'Norte',
    'Brasil' : 'Brasil'
}

"""# Média de horas em afazeres domésticos por ocupação e sexo

"""

hr_cuidados_ocup = pd.read_excel("/content/Dados_PNAD_2022.xlsx", sheet_name= "7013", skiprows= 1)

hr_cuidados_ocup["Regiao"] = hr_cuidados_ocup["UF"].map(uf_regiao)

df = hr_cuidados_ocup.groupby(["Regiao", "Sexo", "Ocupação"]).mean("Med_Horas").reset_index()

ocup = df.query("Regiao == 'Brasil' & Ocupação != 'Total' & Sexo != 'Total' & Ocupação == 'Ocupadas'")
desoc = df.query("Regiao == 'Brasil' & Ocupação != 'Total' & Sexo != 'Total' & Ocupação == 'Não ocupadas'")

import matplotlib.pyplot as plt

for status in [ocup, desoc]:
  fig, ax = plt.subplots(figsize=(8, 6))
  df_plot = pd.DataFrame({
      'Sexo': ['Homens', 'Mulheres'],
      'Média Horas': [status.query("Sexo == 'Homens'")["Med_Horas"].values[0], status.query("Sexo == 'Mulheres'")["Med_Horas"].values[0]]
  })
  bars = df_plot.plot(kind='bar', x='Sexo', y='Média Horas', ax=ax, color=['blue', 'pink'])

  plt.xlabel('Sexo')
  plt.ylabel('Média de horas')
  plt.title(f'{status["Ocupação"].values[0]} - Média de Horas Cuidados/Afazeres por Sexo', fontsize=13)


  for bar in bars.patches:
      yval = bar.get_height()
      ax.text(bar.get_x() + bar.get_width() / 2, yval - 2, round(yval, 2), ha='center', color='white', fontsize=13)

  plt.xticks(rotation=360)

  plt.tight_layout()
  plt.show()

"""## [Gráfico 1](https://public.flourish.studio/visualisation/15914632/)"""

pivot = df.pivot_table(values = "Med_Horas", index = ["Ocupação", "Regiao"], columns = "Sexo", aggfunc= "sum").query("Ocupação != 'Total'").reset_index()
pivot

"""## [Gráfico 2](https://public.flourish.studio/visualisation/15914733/)"""

df1 = df[["Sexo", "Ocupação", "Med_Horas", "Regiao"]].query("Sexo != 'Total'").reset_index()

df1



"""# Pirâmide Etária (Grupo de idades PNAD)

[Gráfico](https://public.flourish.studio/visualisation/15915070/)
"""

censo_pnad = pd.read_excel("/content/Dados_PNAD_2022.xlsx", sheet_name= "Censo_PNAD", skiprows= 1)

censo_pnad["Regiao"] = censo_pnad["UF"].map(uf_regiao)

df = censo_pnad.groupby(["Regiao", "Sexo", "Faixa_PNAD"]).sum("Pessoas").reset_index().query("Faixa_PNAD != 'Total'and Sexo != 'Total'")
df.head()

pivot = df.pivot_table(values = "Pessoas", index = ["Regiao", "Faixa_PNAD"], columns = "Sexo", aggfunc="sum").reset_index()
pivot["Homens"] = pivot["Homens"]*-1
pivot

"""# Proporção Homens/Mulheres (Pizza)

### [Gráfico](https://public.flourish.studio/visualisation/15914597/)
"""

censo = pd.read_excel("/content/Dados_PNAD_2022.xlsx", sheet_name= "Censo", skiprows= 1)
censo["Regiao"] = censo["UF"].map(uf_regiao)

taxas_pop = []

for sexo in ["Mulheres", "Homens"]:
  for regiao in censo["Regiao"].unique():
    df_m = censo.query(f"Regiao == '{regiao}' and Sexo == '{sexo}'")
    df_t = censo.query(f"Regiao == '{regiao}' and Sexo == 'Total'")
    taxa = df_m["Pessoas"].values[0]/df_t["Pessoas"].values[0] * 100
    taxas_pop.append({'regiao' : regiao, 'sexo' : sexo, 'taxa' : taxa})

df = pd.DataFrame(taxas_pop)
df

"""# Instrução"""

educ = pd.read_excel("/content/Dados_PNAD_2022.xlsx", sheet_name= "7128", skiprows= 1)
educ["Regiao"] = educ["UF"].map(uf_regiao)

taxas_educ = []

for sexo in ["Mulheres", "Homens"]:
  for regiao in educ["Regiao"].unique():
    for instrucao in educ["Instrução"].unique():
      df_m = educ.query(f"Regiao == '{regiao}' and Instrução == '{instrucao}' and Sexo == '{sexo}'")
      df_t = educ.query(f"Regiao == '{regiao}' and Instrução == 'Total' and Sexo == '{sexo}'")
      taxa = df_m["Pessoas"].values[0]/df_t["Pessoas"].values[0] * 100
      taxas_educ.append({'regiao' : regiao, 'instrução': instrucao, 'sexo' : sexo, 'taxa' : taxa})

taxas_educ = pd.DataFrame(taxas_educ)
df = taxas_educ.query("instrução != 'Total'")

inst = {'Total' : 'Total',
        'Sem instrução' : 'Sem instrução',
       'Ensino fundamental incompleto ou equivalente' : 'Ensino fundamental incompleto',
       'Ensino fundamental completo ou equivalente' : 'Ensino fundamental completo',
       'Ensino médio incompleto ou equivalente' : 'Ensino médio incompleto',
       'Ensino médio completo ou equivalente' : 'Ensino médio completo',
       'Ensino superior incompleto ou equivalente' : 'Ensino superior incompleto',
       'Superior completo' : 'Superior completo'}

df["Inst"] = df["instrução"].map(inst)

df = df[["Inst", "regiao", "sexo", "taxa"]]

"""### [Gráfico 1](https://public.flourish.studio/visualisation/15926527/)"""

pivot = df.pivot_table(values = "taxa", index = ["sexo", "regiao"], columns = "Inst", aggfunc="sum").reset_index()
pivot

"""### [Gráfico 2](https://public.flourish.studio/visualisation/15926911/)"""

df.pivot_table(values = "taxa", index = ["Inst", "regiao"], columns = "sexo", aggfunc="sum").reset_index()

"""# Rendimento"""

renda = pd.read_excel("/content/Dados_PNAD_2022.xlsx", sheet_name= "7444", skiprows= 1)
renda["Regiao"] = renda["UF"].map(uf_regiao)

"""### [Gráfico 1](https://public.flourish.studio/visualisation/15956211/)"""

df = renda.groupby(["Regiao", "Sexo"]).mean("Reais").reset_index().query("Sexo != 'Total'")
df[["Regiao", "Sexo", "Reais"]]

"""### [Gráfico 2](https://public.flourish.studio/visualisation/15956465/)"""

pivot = df.pivot_table(values = "Reais", index = "Regiao", columns = "Sexo", aggfunc="sum")
pivot

"""# Horas trabalhadas"""

hr_trab = pd.read_excel("/content/Dados_PNAD_2022.xlsx", sheet_name= "6371", skiprows= 1)
hr_trab["Regiao"] = hr_trab["UF"].map(uf_regiao)

"""### [Gráfico 1](https://public.flourish.studio/visualisation/15956688/)"""

df = hr_trab.groupby(["Regiao", "Sexo"]).mean("Med_Horas").reset_index().query("Sexo != 'Total'")
df

"""### [Gráfico 2](https://public.flourish.studio/visualisation/15956830/)"""

pivot = df.pivot_table(values = "Med_Horas", index = "Regiao", columns = "Sexo", aggfunc="sum").reset_index()
pivot

